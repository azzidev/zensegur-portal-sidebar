var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useTheme } from '../context';
export var Card = function (_a) {
    var children = _a.children, title = _a.title, style = _a.style, bodyStyle = _a.bodyStyle;
    var theme = useTheme().theme;
    return (_jsxs("div", __assign({ style: __assign({ backgroundColor: theme.colors.surface, borderRadius: '12px', boxShadow: '0 2px 8px rgba(0, 0, 0, 0.1)', overflow: 'hidden' }, style) }, { children: [title && (_jsx("div", __assign({ style: {
                    padding: '16px 20px',
                    borderBottom: "1px solid ".concat(theme.colors.border),
                    fontWeight: 600,
                    fontSize: '16px',
                    color: theme.colors.text
                } }, { children: title }))), _jsx("div", __assign({ style: __assign({ padding: '20px' }, bodyStyle) }, { children: children }))] })));
};
