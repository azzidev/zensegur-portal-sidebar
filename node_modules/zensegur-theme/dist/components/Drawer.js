var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from "react/jsx-runtime";
import { useTheme } from '../context';
export var Drawer = function (_a) {
    var visible = _a.visible, title = _a.title, children = _a.children, onClose = _a.onClose, _b = _a.placement, placement = _b === void 0 ? 'right' : _b, _c = _a.width, width = _c === void 0 ? 378 : _c, _d = _a.height, height = _d === void 0 ? 378 : _d;
    var theme = useTheme().theme;
    if (!visible)
        return null;
    var getDrawerStyle = function () {
        var baseStyle = {
            position: 'fixed',
            backgroundColor: theme.colors.surface,
            zIndex: 1000,
            boxShadow: '0 4px 20px rgba(0, 0, 0, 0.2)',
            transition: 'transform 0.3s ease'
        };
        switch (placement) {
            case 'left':
                return __assign(__assign({}, baseStyle), { top: 0, left: 0, bottom: 0, width: typeof width === 'number' ? "".concat(width, "px") : width });
            case 'right':
                return __assign(__assign({}, baseStyle), { top: 0, right: 0, bottom: 0, width: typeof width === 'number' ? "".concat(width, "px") : width });
            case 'top':
                return __assign(__assign({}, baseStyle), { top: 0, left: 0, right: 0, height: typeof height === 'number' ? "".concat(height, "px") : height });
            case 'bottom':
                return __assign(__assign({}, baseStyle), { bottom: 0, left: 0, right: 0, height: typeof height === 'number' ? "".concat(height, "px") : height });
            default:
                return baseStyle;
        }
    };
    return (_jsxs(_Fragment, { children: [_jsx("div", { onClick: onClose, style: {
                    position: 'fixed',
                    top: 0,
                    left: 0,
                    right: 0,
                    bottom: 0,
                    backgroundColor: 'rgba(0, 0, 0, 0.5)',
                    zIndex: 999
                } }), _jsxs("div", __assign({ style: getDrawerStyle() }, { children: [title && (_jsxs("div", __assign({ style: {
                            padding: '16px 20px',
                            borderBottom: "1px solid ".concat(theme.colors.border),
                            fontWeight: 600,
                            fontSize: '16px',
                            color: theme.colors.text,
                            display: 'flex',
                            justifyContent: 'space-between',
                            alignItems: 'center'
                        } }, { children: [title, _jsx("button", __assign({ onClick: onClose, style: {
                                    background: 'none',
                                    border: 'none',
                                    fontSize: '18px',
                                    cursor: 'pointer',
                                    color: theme.colors.textSecondary,
                                    padding: '4px'
                                } }, { children: "\u2715" }))] }))), _jsx("div", __assign({ style: {
                            padding: '20px',
                            height: title ? 'calc(100% - 60px)' : '100%',
                            overflow: 'auto',
                            color: theme.colors.text
                        } }, { children: children }))] }))] }));
};
