var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import { jsx as _jsx } from "react/jsx-runtime";
import { useTheme } from '../context';
export var Input = function (_a) {
    var placeholder = _a.placeholder, value = _a.value, onChange = _a.onChange, _b = _a.type, type = _b === void 0 ? 'text' : _b, style = _a.style;
    var theme = useTheme().theme;
    var inputStyle = __assign({ width: '100%', height: '56px', padding: '16px', borderRadius: '12px', border: "1px solid ".concat(theme.colors.border), backgroundColor: theme.colors.surface, color: theme.colors.text, fontSize: '16px', fontFamily: 'Poppins', outline: 'none', transition: 'all 0.3s ease' }, style);
    return (_jsx("input", { type: type, placeholder: placeholder, value: value, onChange: onChange, style: inputStyle, onFocus: function (e) {
            e.target.style.borderColor = theme.colors.primary;
            e.target.style.boxShadow = "0 0 0 2px rgba(232, 100, 18, 0.2)";
        }, onBlur: function (e) {
            e.target.style.borderColor = theme.colors.border;
            e.target.style.boxShadow = 'none';
        } }));
};
