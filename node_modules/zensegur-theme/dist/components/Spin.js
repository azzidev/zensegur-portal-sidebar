var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useTheme } from '../context';
export var Spin = function (_a) {
    var _b = _a.spinning, spinning = _b === void 0 ? true : _b, children = _a.children, _c = _a.size, size = _c === void 0 ? 'default' : _c;
    var theme = useTheme().theme;
    var getSizeValue = function () {
        switch (size) {
            case 'small': return 16;
            case 'large': return 32;
            default: return 24;
        }
    };
    var spinnerSize = getSizeValue();
    var spinner = (_jsx("div", __assign({ style: {
            display: 'inline-block',
            width: "".concat(spinnerSize, "px"),
            height: "".concat(spinnerSize, "px"),
            border: "2px solid ".concat(theme.colors.border),
            borderTop: "2px solid ".concat(theme.colors.primary),
            borderRadius: '50%',
            animation: 'spin 1s linear infinite'
        } }, { children: _jsx("style", { children: "\n        @keyframes spin {\n          0% { transform: rotate(0deg); }\n          100% { transform: rotate(360deg); }\n        }\n      " }) })));
    if (!children) {
        return spinner;
    }
    return (_jsxs("div", __assign({ style: { position: 'relative' } }, { children: [children, spinning && (_jsx("div", __assign({ style: {
                    position: 'absolute',
                    top: 0,
                    left: 0,
                    right: 0,
                    bottom: 0,
                    backgroundColor: 'rgba(255, 255, 255, 0.8)',
                    display: 'flex',
                    alignItems: 'center',
                    justifyContent: 'center',
                    zIndex: 10
                } }, { children: spinner })))] })));
};
